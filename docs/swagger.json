{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/": {
            "post": {
                "description": "Принимает оригинальный URL в теле запроса (plain text), возвращает короткую ссылку",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "URL"
                ],
                "summary": "Создать короткую ссылку для одной URL",
                "parameters": [
                    {
                        "description": "Оригинальный URL",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Короткая ссылка",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Короткая ссылка уже существует",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/shorten": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает сокращенный URL на основе переданного оригинального URL.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Создание URL"
                ],
                "summary": "Создание сокращенного URL",
                "parameters": [
                    {
                        "description": "Запрос на создание сокращенного URL",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ShortenRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Сокращенный URL успешно создан",
                        "schema": {
                            "$ref": "#/definitions/dto.ShortenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/shorten/batch": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает несколько сокращенных URL в одном запросе.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пакетные операции"
                ],
                "summary": "Пакетное создание коротких URL",
                "parameters": [
                    {
                        "description": "Запрос на пакетное создание URL",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BatchRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Список созданных коротких URL",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BatchResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "413": {
                        "description": "Request Entity Too Large"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/user/urls": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех активных (не удаленных) URL, созданных пользователем.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользовательские URL"
                ],
                "summary": "Получение всех URL пользователя",
                "responses": {
                    "200": {
                        "description": "Список URL пользователя",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.URLRequest"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Помечает указанные URL как удаленные (устанавливает флаг is_deleted=true) для конкретного пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Управление URL"
                ],
                "summary": "Пакетное удаление URL пользователя",
                "parameters": [
                    {
                        "description": "Список сокращенных URL для удаления",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Запрос на удаление принят в обработку"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Проверяет доступность базы данных. Использует контекст с таймаутом.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Healthcheck"
                ],
                "summary": "Проверка подключения к базе данных",
                "responses": {
                    "200": {
                        "description": "База данных доступна",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка подключения к базе данных",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/{hash}": {
            "get": {
                "description": "Выполняет редирект на оригинальный URL по его сокращенному идентификатору.",
                "tags": [
                    "Перенаправления"
                ],
                "summary": "Перенаправление на оригинальный URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Сокращенный идентификатор URL",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Перенаправление на оригинальный URL"
                    },
                    "404": {
                        "description": "URL не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "410": {
                        "description": "URL был удален",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BatchRequest": {
            "type": "object",
            "required": [
                "correlation_id",
                "original_url"
            ],
            "properties": {
                "correlation_id": {
                    "type": "string",
                    "minLength": 1
                },
                "original_url": {
                    "type": "string"
                }
            }
        },
        "dto.BatchResponse": {
            "type": "object",
            "properties": {
                "correlation_id": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        },
        "dto.ShortenRequest": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.ShortenResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "dto.URLRequest": {
            "type": "object",
            "properties": {
                "original_url": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        }
    }
}